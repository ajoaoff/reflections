What happens when you initialize a repository? Why do you need to do it?
Git creates the metadata, marking that directory as a repository. It is
necessary for git to take control of what is changed.

How is the staging area different from the working directory and the repository? 
What value do you think it offers?
The staging area have files that are part of the repository but have been
changed since last commit. Not all files in the working directory are necessarily
part of the staging area.

How can you use the staging area to make sure you have one commit per logical change?
Even if you made more than one logical change, you can stage the changes one by one
and commit them.

What are some situations when branches would be helpful in keeping your history organized? 
How would branches help?
Branches can help when you want to try a new feature that could break the system.
Using branches, you keep that new feature separeted from the main branch until it is
ready to be used (or not).

How do the diagrams help you visualize the branch structure?
Diagrams allows me to see the branch history and the reachability of every commit.

What is the result of merging two branches together? Why do we represent it 
in the diagram the way we do?
The result is a branch with te modifications made in both merged branches. We represent
in that way to show the two different paths the modifications took.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
Automatic merging saves time when it's easy for Git to identify that the changes does
not intefer with other code, but when it does, it's better to merge manually.
